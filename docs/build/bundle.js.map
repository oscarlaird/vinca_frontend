{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/unix_day.js","../../src/card_templates.js","../../src/api.js","../../src/tristate.svelte","../../src/review_button.svelte","../../src/create_button.svelte","../../src/card.svelte","../../src/info_tooltip.svelte","../../src/advanced_filters.svelte","../../src/filters.svelte","../../src/home.svelte","../../src/text_editor.svelte","../../src/audio_picker.svelte","../../src/image_picker.svelte","../../src/side_editor.svelte","../../src/tags_editor.svelte","../../src/edit_header.svelte","../../src/rectangle.svelte","../../src/image_occluder.svelte","../../src/edit.svelte","../../src/placeholder_cards.js","../../src/occlusion_reviewer.svelte","../../src/review.svelte","../../src/login.svelte","../../src/App.svelte","../../src/filtering.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","let unix_seconds = () => Math.floor(Date.now() / 1000);\nconst tz_offset = (new Date().getTimezoneOffset())*60; // number of seconds between here and GMT (getTimezoneOffset returns minutes)\nlet local_unix_seconds = () => unix_seconds() - tz_offset;\nlet local_unix_day = () => local_unix_seconds() / 86400.0; // 86400 seconds in a day\n\nexport { local_unix_day, unix_seconds }\n","import { local_unix_day } from './unix_day.js'\n\nfunction new_card() {\n        const current_time = local_unix_day()\n        return {id: 0,\n                front_text: '', back_text: '',\n                visibility: 'visible', card_type: 'basic', scheduler: 'basic',\n                tags: '',\n                merit: 6,\n                create_date: current_time, due_date: current_time,\n                last_review_date: current_time, last_edit_date: current_time,\n                review_seconds: 0, edit_seconds: 0, total_seconds: 0,\n                front_image_id: 0, back_image_id: 0, front_audio_id: 0, back_audio_id: 0};\n}\n\nfunction dummy_card() {\n        return dummy_card ={...new_card(), front_text: 'loading...'};\n}\n\nexport { new_card, dummy_card }\n","import { local_unix_day } from './unix_day.js'\n// export error variables so we can show the\n// user if and how the server fails\nlet api_url = \"https://api.vinca.study/\";\nlet error = {active: false, code: null, message: ''};\n\nfunction random_id() {\n        // returns a random 15 digit id\n        // We don't want to go beyond this because javascript only supports 56bit ints.\n        return String(Math.floor(Math.random() * 1000000000000000))\n}\n\nfunction default_options() {\n  return {\n    method: 'POST',\n    mode: 'cors',\n    headers: {'content-type': 'application/json', 'Authorization': 'Bearer '+window.localStorage.getItem('access_token')}\n  }\n};\n\n// metadata is needed for edits and reviews\n// it specifies the date and the number of seconds that it took to edit or review\n\nasync function get_users_list() {\n        var url = new URL(api_url + 'auth/users_list');\n        var options = default_options()\n        options.method = 'GET';\n        const response = await fetch(url, options);\n        return response.json();\n}\n\nasync function get_token(username, password) {\n        var url = new URL(api_url + 'auth/token');\n        var fd = new FormData();\n        fd.append('username', username)\n        fd.append('password', password)\n        const options = {\n          method: 'POST',\n          mode: 'cors',\n          body: fd,\n        }\n        var success = null;\n        const response = await fetch(url, options)\n          .then((r) => {\n                  success = r.ok; // record if our token request was sucessful\n                  return r; // pass on response to error handler\n          })\n          .then(handle_error_response)\n          .catch(fetch_error_handler);\n        if (success) {\n                var token = await response.json();\n                window.localStorage.setItem('access_token', token.access_token)\n                window.localStorage.setItem('username', username)\n                return true\n        } else {\n                return false\n        }\n}\n\nasync function register_and_get_token(username, password) {\n        var url = new URL(api_url + 'auth/register');\n        var options = default_options()\n        options.body = JSON.stringify( {username: username, password: password} )\n        var success = null;\n        const response = await fetch(url, options)\n          .then((r) => {\n                  success = r.ok; // record if our token request was sucessful\n                  return r; // pass on response to error handler\n          })\n          .then(handle_error_response)\n          .catch(fetch_error_handler);\n        if (success) {\n                var token = await response.json();\n                window.localStorage.setItem('access_token', token.access_token)\n                window.localStorage.setItem('username', username)\n                return true\n        } else {\n                return false;\n        }\n}\n\n\nasync function commit_changes(card, seconds = 0) {\n  const url = new URL(api_url + 'commit_card');\n  const metadata = {seconds: seconds, date: local_unix_day()}\n  const payload = {\n          card: card,\n          metadata: metadata,\n  }\n  let options = default_options();\n  options.body = JSON.stringify( payload );\n  fetch(url, options)\n    .then(handle_error_response)\n    .then(response => {\n          const server_card = response.json();\n          // update card to match server_card. Especially important is that the id of a new card is updated.\n          for (var key in server_card) {\n                  card[key] = server_card[key]\n          }\n    })\n    .catch(fetch_error_handler);\n}\n\nfunction fetch_error_handler(error) {\n        alert('Internet Problem: ' + error.message)\n}\nfunction handle_error_response(response) {\n    if (response.ok) {\n            return response // pass on response for processing\n    } else {\n        throw new Error(response.status + ':  ' + response.statusText)\n    }\n}\n\nasync function commit_grade(card_id, grade, seconds) {\n    const review_params = {\n            card_id: card_id,\n            grade: grade,\n    };\n    const metadata = {seconds: seconds, date: local_unix_day()}\n    const payload = {review: review_params, metadata: metadata}\n    let options = default_options();\n    options.body = JSON.stringify( payload );\n    var url = new URL(api_url + 'review');\n    fetch(url, options)\n      .then(handle_error_response)\n      .catch(fetch_error_handler);\n}\n\nasync function upload_media(content, base64=true) {\n        let options = default_options();\n        options.body = JSON.stringify( {content: content, base64: base64} );\n        var url = new URL(api_url + 'upload_media')\n        var media_id = null;\n        const r = await fetch(url, options)\n          .then(handle_error_response)\n          .catch(fetch_error_handler);\n        const json = await r.json();\n        media_id = await json.media_id;\n        return media_id\n}\n\nasync function set_guest_user() {\n        if (!window.localStorage.getItem('username')) {\n                window.localStorage.setItem('username','guest')\n                window.localStorage.setItem('access_token','guest123')\n        }\n}\n\nasync function fetch_cardlist(filters, sort) {\n        var options = default_options();\n        const url = new URL(api_url + 'cardlist');\n        const faux_filters = {deleted: null};\n        const payload = {crit: {sort: sort}, filters: filters}\n        options.body = JSON.stringify( payload )\n        const response = await fetch(url, options)\n              .then(handle_error_response)\n              .catch(fetch_error_handler);\n        return response.json();\n}\n\nasync function hypothetical_due_dates(card_id, date) {\n        const url = new URL(api_url + 'hypothetical_due_dates')\n        url.search = new URLSearchParams({card_id: card_id, date: date})\n        var options = default_options()\n        options.method = 'GET';\n        const response = await fetch(url, options);\n        const hypo_due_dates = await response.json();\n        return hypo_due_dates;\n}\n\nasync function get_collection_tags() {\n        const url = new URL(api_url + 'collection_tags')\n        var options = default_options()\n        options.method = 'GET';\n        const response = await fetch(url, options);\n        return response.json();\n}\n\nasync function fetchWithAuthentication(url) {\n  const headers = new Headers();\n  var options = default_options();\n  options.method = 'GET';\n  const response = await fetch(url, options);\n  return response\n}\n\nasync function getProtectedImage( media_id) {\n  // Fetch the image.\n  const url = (api_url + 'get_media?media_id=' + media_id)\n  const response = await fetchWithAuthentication( url );\n\n  // Create an object URL from the data.\n  const blob = await response.blob();\n  const objectUrl = URL.createObjectURL(blob);\n\n  return objectUrl\n  // Update the source of the image.\n}\n\nasync function getOcclusionData( media_id ) {\n        // Occlusion cards store their data in plaintext JSON format\n        // In a media record referenced by back_image_id\n        // We can do this because occlusion cards don't need back images\n        \n        // Fetch the image.\n        const url = (api_url + 'get_occlusion_data?media_id=' + media_id)\n        const response = await fetchWithAuthentication( url );\n        const json = await response.json();\n        return JSON.parse(json)\n}\n\nasync function purge(filters) {\n        const url = new URL(api_url + 'purge');\n        var options = default_options();\n        options.body = JSON.stringify( filters );\n        const response = await fetch(url, options);\n}\n\nexport { random_id, getOcclusionData, purge, get_collection_tags, hypothetical_due_dates, register_and_get_token, fetch_cardlist, set_guest_user, get_users_list, upload_media, commit_changes, commit_grade, error, getProtectedImage, get_token }\n","<script>\n        export let state = null;\n        let states = [null, true, false];\n\tlet state_idx = states.indexOf(state); // initial state idx\n\t$: state = states[state_idx];\n        $: color = {null:'black', true: 'darkgreen', false: 'red'}[state];\n        $: text = {null: 'any', true: 'yes', false: 'no'}[state];\n\tfunction cycle_state() {\n\t\tstate_idx = (state_idx + 1) % states.length;\n\t}\n</script>\n\n<label style:color={color} style:display={'inline'}>\n  <slot></slot><br>\n  <input on:click={cycle_state} type=\"checkbox\" indeterminate={state===false} checked={state != null}>\n\t{text}\n</label>\n\n<style>\n\tlabel {\n\t\tmargin: 10px;\n\t}\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n  function forward() {\n          dispatch('click');\n  }\n  export let due_count = 0;\n  $: due_count_plus = due_count + (due_count>=50 ? '+' : '');\n</script>\n\n<button type='button' on:click={forward}>\n  <div id='review_text'>\n    Review <span style=\"font-size: 100%;\">🕮 </span>\n  </div>\n  <div id='due_count'>{due_count_plus} cards due</div>\n</button>\n\n<style>\n  button {\n    color: green;\n    border: 2px green solid;\n    margin: 6px;\n  }\n  #review_text {\n    font-size: 2em;\n    font-family: \"Times New Roman\", Times, Serif;\n    padding: 0.5em;\n  }\n  #due_count {\n    font-size: 1em;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n  function forward() {\n          dispatch('click');\n  }\n  export let created_count;\n</script>\n\n<button type='button' on:click={forward}>\n  <div id='create_text'>\n    Create <span style=\"font-size: 100%;\">✍</span> \n  </div>\n  <div id='due_count'>{created_count} created today</div>\n</button>\n\n<style>\n  button {\n    color: purple;\n    border: 2px purple solid;\n    margin: 6px;\n  }\n  #create_text {\n    font-size: 2em;\n    font-family: \"Times New Roman\", Times, Serif;\n    padding: 0.5em;\n  }\n  #due_count {\n    font-size: 1em;\n  }\n</style>\n","<script>\n  import { local_unix_day } from './unix_day.js';\n  import { commit_changes } from './api.js';\n  async function toggle_delete() {\n          card.visibility = (card.visibility==='visible' ? 'deleted' : 'visible');\n          //notify API\n          commit_changes(card);\n          card_edited_alert = true;\n\n  }\n  function preview() {\n          state['card_to_preview'] = card;\n          state['preview_mode'] = true;\n  }\n  function edit() {\n          state['card_to_edit'] = card;\n          state['edit_mode'] = true;\n  }\n  export let card;\n  export let card_edited_alert;\n  export let state;\n  export let info; // We need to know the sort criterion so that\n  let current_time = local_unix_day();\n  $: text_decoration = (card.visibility==='deleted' ? 'line-through' : '');\n  $: is_due = card.due_date < current_time;\n  $: due_alert = (is_due && card.visibility==='visible' ? 'inline' : 'none');\n  $: extra_info = get_extra_info(info);\n  function get_extra_info(info) {\n          switch (info) {\n                  case '':\n                          return ''\n                  case 'create_date':\n                          return 'Created <b><mark>' +\n                                  Math.trunc(current_time - card[info]) +\n                                  '</mark></b> days ago';\n                  case 'due_date':\n                          return 'Due in <b><mark>' +\n                                  Math.trunc(card[info] - current_time) +\n                                  '</mark></b> days';\n                  case 'last_review_date':\n                          return 'Last reviewed <b><mark>' +\n                                  Math.trunc(current_time - card[info]) + \n                                  '</mark></b> days ago';\n                  case 'last_edit_date':\n                          return 'Last edited <b><mark>' +\n                                  Math.trunc(current_time - card[info]) + \n                                  '</mark></b> days ago';\n                  case 'review_seconds':\n                          return 'Spent <b><mark>' +\n                                  Math.floor(card[info]) + \n                                  '</mark></b> seconds reviewing';\n                  case 'edit_seconds':\n                          return 'Spent <b><mark>' +\n                                  Math.floor(card[info]) + \n                                  '</mark></b> seconds editing';\n                  case 'total_seconds':\n                          return 'Spent <b><mark>' +\n                                  Math.floor(card[info]) + \n                                  '</mark></b> seconds';\n                  case 'card_type':\n                          return '<b><mark>' +\n                                  card[info] + \n                                  '</mark></b>';\n                  case 'tags':\n                          return 'tags: <b><mark>' +\n                                  card[info] + \n                                  '</mark></b>';\n                  case 'merit':\n                          return '<b><mark>' +\n                                  card[info] + \n                                  '</mark></b>';\n                  default:\n                          return ''\n          }\n  }\n\n  let card_container;\n</script>\n\n<div class='card_container'>\n    <button style:color={'darkred'} type=\"button\" class=\"button\" on:click={toggle_delete}>✕</button>&nbsp;\n    <button type=\"button\" class=\"button\" on:click={preview}>👁</button>&nbsp;\n    <button type=\"button\" class=\"button\" on:click={edit}>✍</button>&nbsp;\n    {@html extra_info}\n    <span class='front_text' style='color:purple; display:{due_alert}' style:font-size={'14px'}>due&nbsp;</span>    \n\n    <span class='front_text' style='text-decoration:{text_decoration}'>{(!card.front_text) ? '(blank)' : card.front_text}</span>\n</div>\n\n\n<style>\n  .card_container {\n    border: 2px solid black;\n    padding: 6px;\n    margin: 5px;\n    background-color: rgba(256,256,256,0.3);\n  }\n  .front_text {\n    font-size: 1.2em;\n    line-height: 1.8em;\n  }\n  .button {\n    background-color: #eee;\n    margin: auto 2px;\n    min-width: 1.8em;\n    min-height: 1.8em;\n    width: 1.8em;\n    height: 1.8em;\n    border-radius: 20%;\n    padding: 2px;\n  }\n\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  export let text;\n  let tooltip;\n  let tooltiptext;\n  let innerWidth; // width of the whole window\n  onMount(() => {\n          // Do some gymnastics so that if the info icon\n          // is on the edge of the screen the tooltip help\n          // text will still be entirely on the screen\n          // usually it is centered below info icon\n          const rect = tooltip.getBoundingClientRect()\n          const left_margin=rect.left\n          const right_margin=innerWidth - rect.right\n          if (left_margin < 120) {\n                tooltiptext.style['margin-left'] = '-'+left_margin+'px';\n          } else if (right_margin < 120) {\n                tooltiptext.style['margin-left'] = '-'+(240 - right_margin)+'px';\n          } else {\n                tooltiptext.style['margin-left'] = '-120px';\n          }\n\n\n  });\n</script> \n\n<div class=\"tooltip\" bind:this={tooltip}>\n\t<span class='question_mark'>?</span>\n        <span class=\"tooltiptext\" bind:this={tooltiptext} >{@html text}</span>\n</div>\n\n<svelte:window bind:innerWidth  />\n\n<style>\n/* Tooltip container */\n.tooltip {\n  position: relative;\n  display: inline-block;\n\tborder: 1px solid black;\n\theight: 24px;\n\twidth: 24px;\n\tborder-radius: 50%;\n\ttext-align: center;\n  vertical-align: middle;\n}\n\t\n\t.question_mark {\n\t\tfont-size: 1.4em;\n\t}\n\n/* Tooltip text */\n.tooltiptext {\n  visibility: hidden;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 5px;\n  border-radius: 6px;\n\n  /* Position the tooltip text */\n  position: absolute;\n  z-index: 1;\n\t\n  /* Fade in tooltip */\n  opacity: 0;\n  transition: opacity 0.5s;\n\t\n  width: 240px;\n  top: 100%;\n  left: 50%;\n\tmargin-top: 10px;\n}\n\n/* Show the tooltip text when you mouse over the tooltip container */\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n  opacity: 1;\n\tfont-size: 1em;\n} \n</style>\n","<script>\n  import { purge } from './api.js'\n  import Tristate from './tristate.svelte';\n  import InfoTooltip from './info_tooltip.svelte';\n  export let filters;\n  export let info;\n  export let collection_tags;\n  export let sort;\n  export let card_edited_alert;\n  export let filtered_cards;\n  let purge_button;\n  function ask_purge() {\n          if (confirm('Purge deleted cards?')) {\n                  purge(filters)\n                  purge_button.style.display = 'none';\n                  filtered_cards =[];\n          }\n  }\n  $: switch (sort) {\n          case 'old':\n                  info = 'create_date';\n                  break;\n          case 'overdue':\n                  info = 'due_date';\n                  break;\n          case 'total time':\n                  info = 'total_seconds';\n                  break;\n          case 'meritorious':\n                  info = 'merit';\n                  break;\n          default:\n                  info = null;\n                  break;\n  }\n  \n</script>\n\n<div class='master'>\n<div class='tristates'>\n<Tristate bind:state={filters['due']}>due: </Tristate>\n<Tristate bind:state={filters['new']}>new: </Tristate>\n<Tristate bind:state={filters['deleted']}>deleted: </Tristate>\n{#if filters.deleted}\n        <button type='button' style:border-radius={'4px'} bind:this={purge_button} style:color={'red'} on:click={ask_purge}>purge\n                <InfoTooltip text={'Purged cards will never be seen again.<br><br>(However, vinca never destroys data and it is possible to manually recover purged cards from the database).'} />\n        </button>\n{/if}\n<Tristate bind:state={filters['images']}>images: </Tristate>\n<Tristate bind:state={filters['audio']}>audio: </Tristate>\n</div>\n\n<div class='selectors'>\n<span>\nCard type:\n<select bind:value={filters['card_type']}>\n        <option></option>\n\t<option>basic</option>\n\t<option>verses</option>\n\t<option>occlusion</option>\n</select></span>\n<span>\nInfo: \n<select bind:value={info}>\n        <option></option>\n\t<option value='create_date'>created</option>\n\t<option value='due_date'>due date</option>\n\t<option value='last_review_date'>last review</option>\n\t<option value='edit_seconds'>editing time</option>\n\t<option value='review_seconds'>review time</option>\n\t<option value='total_seconds'>total time</option>\n\t<option value='card_type'>card type</option>\n\t<option value='tags'>tags</option>\n\t<option value='merit'>merit</option>\n</select></span>\n</div>\n<div class='selectors'>\n<span>\nSort: \n<select bind:value={sort}>\n\t<option>recent</option>\n\t<option>old</option>\n\t<option>overdue</option>\n\t<option>total time</option>\n\t<option>random</option>\n\t<option>meritorious</option>\n</select></span>\n<span>\nTag: \n<select bind:value={filters['tag']}>\n        <option></option>\n        {#each collection_tags as tag}\n                <option>{tag}</option>\n        {/each}\n</select></span></div>\n\n<!--\n<div class='buttons'>\n<label>\n        <center>Created Date Range</center>\n        <center><input type='date' bind:value={filters['created_after']}><input type='date' bind:value={filters['created_before']}></center>\n</label>\n<label>\n        <center>Due Date Range</center>\n        <center><input type='date' bind:value={filters['due_after']}><input type='date' bind:value={filters['due_before']}></center>\n</label>\n</div>\n-->\n</div>\n\n\n<style>\n\tinput {\n\t\tfont-size: 12px;\n\t}\n\tdiv {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tmargin: 10px;\n\t}\n\t.tristates {\n\t}\n\t.selectors {\n\t\tmin-width: 350px;\n\t}\n\t.buttons {\n\t\tmin-width: 300px;\n\t}\n\tselect {\n                margin: 10px 20px 10px 0px;\n\t\tvertical-align: middle;\n\t}\n\tbutton {\n\t\tmargin: 10px;\n\t}\n        label {\n                margin: 10px;\n        }\n\t.master {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-flow: row wrap;\n\t\t\n\t}\n\n</style>\n\n\n","<script>\n  export let filters;\n  export let info\n  export let sort;\n  export let collection_tags;\n  export let filtered_cards\n  import AdvancedFilters from './advanced_filters.svelte';\n\tlet open = false;\n\t$: visibility = (open ? 'block' : 'none')\n\t$: pointer = (open ? '-' : '+');\n\t$: more_or_less = (open ? 'Less' : 'More')\n\tlet toggle = () => {open = !open};\n</script>\n\n<center>\n        Search: <input type='search' bind:value={filters['search']}>\n<button type='button' on:click={toggle}>\n        {more_or_less} Filters <b>{pointer}</b>\n</button>\n</center>\n\n<div style:display={visibility}>\n<AdvancedFilters bind:filtered_cards bind:sort bind:collection_tags bind:info bind:filters />\n</div>\n\n\n\n\n","<script>\n  import { new_card } from './card_templates.js';\n  import Tristate from './tristate.svelte';\n  import ReviewButton from './review_button.svelte';\n  import CreateButton from './create_button.svelte';\n  import Card from './card.svelte';\n  import Filters from './filters.svelte';\n  let due;\n  let new_only;\n  $: due_message = (due === 'any' ? '' : due === 'yes' ? 'due' : 'not due')\n  export let username;\n  export let state;\n  export let filtered_cards;\n  export let cached_cards;\n  export let filters;\n  export let due_count;\n  export let info;\n  export let created_count;\n  export let card_edited_alert;\n  export let collection_tags;\n  export let sort;\n  export let search;\n  let innerWidth;\n  // one column for every 450px of window width\n  // At least one column\n  $: cols = Math.floor(innerWidth / 450) || 1\n  function create_card() {\n          // create a new template card\n          // add it to the filtered_cards list\n          // pass it to the editor\n          let nc = {...new_card()}; // copy new card template\n          state['card_to_edit'] = nc;\n          state['edit_mode'] = true;\n  }\n</script>\n\n<svelte:window bind:innerWidth />\n\n<body>\n\n\n<div class='top'>\n{#if username === 'guest'}\n        Welcome, guest\n        <button class='login_button' type='button' on:click={() => {username = 'none'}}>login / register</button>\n{:else}\n        Hello, {username}\n        <a class='login_button' on:click={() => {username = 'guest'; window.localStorage.clear()}}>sign out</a> or\n        <a class='login_button' on:click={() => {username = 'none'}}>switch account</a>\n{/if}\n\n<a style=\"float: right; position: relative;\">Links</a>\n\n<div id='major_buttons'>\n<ReviewButton on:click={() => {state.reviewing=true}} bind:due_count></ReviewButton>\n<CreateButton on:click={create_card} bind:created_count></CreateButton>\n</div>\n</div>\n\n<div style:margin='20px'>\n<Filters bind:filtered_cards bind:search bind:sort bind:filters bind:info bind:collection_tags/>\n</div>\n\n<div class='columns'>\n\n<!--\n// [...Array(5).keys()] gives the range [0,1,2,3,4]\n-->\n{#each [...Array(cols).keys()] as offset}\n        <div class='column'>\n        {#each filtered_cards.filter((elem,idx,arr) => idx%cols===offset) as card (card.id)}\n                <Card bind:card_edited_alert card={card} bind:info bind:state></Card>\n        {/each}\n        </div>\n{/each}\n\n</div>\n\n\n\n</body>\n\n<style>\n  #major_buttons {\n    display: grid;\n    grid-template-columns: auto auto;\n    background-color: #ddd;\n    width: 100%;\n    border: 1px solid black;\n  }\n  .top {\n    max-width: 1000px;\n    margin: auto auto;\n  }\n  .login_button {\n    border-radius: 10px;\n  }\n  .columns {\n    display: grid;\n    grid-template-columns: auto;\n  }\n  @media screen and (min-width: 900px) {\n    .columns {\n      grid-template-columns: 50% 50%;\n    }\n  }\n  @media screen and (min-width: 1350px) {\n    .columns {\n            grid-template-columns: 33% 34% 33%;\n    }\n  }\n  @media screen and (min-width: 1800px) {\n    .columns {\n            grid-template-columns: 25% 25% 25% 25%;\n    }\n  }\n</style>\n","<script>\n\timport {onMount} from 'svelte';\n  export let value = null;\n\tlet area;\n\texport let placeholder;\n        $: if (area) {area.placeholder = placeholder}\n</script>\n\n<textarea bind:value bind:this={area}></textarea>\n\n<style>\n\ttextarea {\n\t\tborder: 1px solid black;\n\t}\n</style>\n","<script>\n  let real_file_input;\n\tlet value = 'Choose audio';\n</script>\n\n<input type='file' bind:this={real_file_input} accept='.mp3,.wav,.ogg' bind:value style='display: none'>\n\n<button on:click={() => {real_file_input.click()}}>\n\t&nbsp;\n\t♬\n\t&nbsp;\n\t<span style='font-size: 32px;'>↑</span>\n\t&nbsp;\n\t🕪\n\t<br>\n\t<span style='font-size: 16px;'>{value}</span>\n</button>\n\n<style>\n\tbutton {\n\t\tcolor: black;\n\t\tfont-size: 20px;\n\t\tpadding: 15px;\n\t\tborder: 1px solid black;\n\t}\n</style>\n","<script>\n  import { onMount } from 'svelte'\n  import {upload_media, getProtectedImage} from './api.js';\n  export let image_id;\n  let image_url = null;\n  let real_file_input;\n  export let disabled = false;\n  let name = 'Choose Image';\n  let button;\n  function upload() {\n          let file = real_file_input.files[0]\n          name = file.name;\n          const reader = (new FileReader());\n          reader.readAsDataURL(file); \n          reader.onload = async () => {\n                  let media_id = await upload_media(reader.result);\n                  image_id = await media_id;\n                  image_url = 'url(' + reader.result + ')';  // base64 encoding of selected file with mime-type prefix\n                  button.style['background-image'] = image_url\n          };\n  };\n  onMount(async () => {\n          if (image_id!=0) {\n                  const image_url = await getProtectedImage( image_id );\n                  button.style['background-image'] = 'url('+image_url+')'\n          }\n  });\n</script>\n\n\n<input type='file' bind:this={real_file_input} on:change={upload} accept='image/*' style='display: none'>\n\n<button style:background-color={disabled ? 'lightgray' : 'white'} disabled={disabled} bind:this={button} on:click={() => {real_file_input.click()}}>\n\t&nbsp;\n\t🖼\n\t&nbsp;\n\t<span style='font-size: 32px;'>↑</span>\n\t&nbsp;\n\t📷\n\t<br>\n\t<span style='font-size: 16px;'>{disabled ? 'N/A' : name}</span>\n</button>\n\n<style>\n\tbutton {\n\t\tcolor: black;\n\t\tfont-size: 20px;\n\t\tpadding: 15px;\n\t\tborder: 1px solid black;\n                background-size: cover;\n\t}\n</style>\n","<script>\n    import Editor from './text_editor.svelte';\n\timport Audio from './audio_picker.svelte';\n\timport Image from './image_picker.svelte';\n\texport let text;\n        export let image_id;\n        export let audio_id;\n\texport let audio_file;\n\texport let image_file;\n\texport let placeholder;\n        export let image_picker_disabled;\n</script>\n\n<div id='main'>\n\t<Editor bind:value={text} bind:placeholder></Editor>\n\t<div id='media'>\n      <Audio></Audio>\n      <Image bind:image_id disabled={image_picker_disabled}></Image>\n\t</div>\n</div>\n\n<style>\n\t#media {\n\t\tdisplay: grid;\n        margin: 5px;\n\t}\n\t#main {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto minmax(100px,150px);\n\t}\n</style>\n","<script>\n  export let card;\n  export let collection_tags;\n\tfunction new_tag (tag) {\n\t\tcollection_tags = [tag, ...collection_tags];\n                has_tag_map[tag] = true;\n\t}\n  let has_tag_map = collection_tags.reduce((running_map, tag) => {running_map[tag] = false; return running_map}, (new Map()));\n  const tl = card.tags==='' ? [] : card.tags.split(',')\n  for (tag in tl) {\n          has_tag_map[tag] = true\n  }\n  $: tags_list = Object.entries(has_tag_map).filter(pair => pair[1]).map(pair => pair[0])\n  $: card.tags = tags_list.join(', ');\n\n  let search = '';\n</script>\n\n<div id='tags_bar'>\n  <p id='tags_list'><b>{card.tags}</b></p>\n  <button type='button' on:click={() => {new_tag(prompt('new tag'))}}>+ new tag </button>&nbsp;\n  <input type='search' bind:value={search} placeholder='search' />\n\n{#each Object.keys(has_tag_map).reverse() as tag}\n        {#if tag.includes(search)}\n            <label> \n                <input type='checkbox' bind:checked={has_tag_map[tag]}  />\n                {tag}\n            </label>\n        {/if}\n{/each}\n</div>\n\n\n\n\n\n<style>\n\t#tags_bar {\n\t\tborder: 1px solid black;\n\t\tbackground-color: #eee;\n\t\tmargin: auto 0 15px;\n\t\tdisplay: flex;\n                flex-flow: row wrap;\n\t\tpadding: 10px;\n\t}\n\tp {\n\t\ttext-align: center;\n                width: 100%;\n\t}\n        label {\n                margin: 8px;\n\n        }\n\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import InfoTooltip from './info_tooltip.svelte'\n  export let card;\n  const dispatch = createEventDispatcher();\n  let save   = () => {dispatch('save')}\n  let cancel = () => {dispatch('cancel')}\n  let preview = () => {dispatch('preview')}\n  const card_types = ['basic','verses','occlusion']\n</script>\n\n<center>\n        <InfoTooltip text=\"<b>Basic</b>:  class question and answer card <br><br>\n                <b>Verses</b>: tests you line by line (useful for poetry and oratory) <br><br>\n                <b>Occlusion</b>: generate several cards by covering up parts of a map or diagram (useful for geography or anatomy)\" />\n{#each card_types as card_type}\n<label>\n  <input type=\"radio\" name=\"card_type\" bind:group={card.card_type} value={card_type} checked={card.card_type===card_type}>\n  {card_type}\n</label>\n{/each}\n\n\n<button class='submit_button' on:click={cancel}>cancel</button>\n<button class='submit_button' on:click={preview}>preview</button>\n<button class='submit_button' on:click={save}>  save</button>\n\n\n<InfoTooltip text=\"Quantify in minutes the worth of remembering this knowledge.<br><br>\n        This is difficult.<br><br>\n        This lets you see if the time spent studying a card has been worthwhile. <br><br>\n        It also lets you sort your cards to find the best ones.\" />\nMerit\n<input type=number bind:value={card.merit} style:width='50px' min=1 max=60>\n\n\n</center>\n\n<style>\n        input[type='radio'] {\n                transform: scale(1.3)\n        }\n\tlabel {\n\t\tdisplay: inline;\n\t\tpadding: 12px;\n\t\tfont-size: 1.3em;\n\t}\n\t.submit_button {\n\t\tfont-size: 1.2em;\n\t\tpadding: 18px;\n\t\tmargin: 6px;\n        border: 1px solid black;\n\t}\n</style>\n\n","<script>\n        export let self = {deleted: false, id: 0, left: 100, top: 100, width: 200, height: 100}\n        let click_pos;\n        let old_self;\n        function resize(e) {\n                click_pos = {x:e.clientX, y:e.clientY}\n                old_self = {...self};\n                document.onmousemove = (e) => {\n                                self.width = old_self.width + (e.clientX - click_pos.x);\n                                self.height = old_self.height + (e.clientY - click_pos.y);\n                }\n                document.onmouseup = (e) => {document.onmousemove = null;}\n        }\n        function move(e) {\n                click_pos = {x:e.clientX, y:e.clientY}\n                old_self = {...self};\n                document.onmousemove = (e) => {\n                                self.left = old_self.left + (e.clientX - click_pos.x);\n                                self.top  = old_self.top  + (e.clientY - click_pos.y);\n                        }\n                document.onmouseup = (e) => {document.onmousemove = null;}\n                //pass\n        }\n        function del(e) {\n                if (self.id!=0 && !confirm('This will trigger a card to be deleted on save.')) {\n                        return\n                }\n                self.deleted = true;\n                swallow(e)\n        }\n        function swallow(e) {\n                e.stopPropagation()\n        }\n</script>\n\n{#if !self.deleted}\n<div style:position={'absolute'}\n     style:top={self.top +'px'} style:left={self.left +'px'}\n     style:width={self.width +'px'} style:height={self.height +'px'} >\n     <button id='moveButton'   type='button' on:mousedown={move} on:click={swallow}>{self.width>45 && self.height>20 ? '✣ Move' : ''}</button>\n     <button id='deleteButton' type='button' on:click={del}>✗ Del</button>\n     <button id='resizeButton' type='button' on:mousedown={resize} on:click={swallow}>⤡</button>\n</div>\n{/if}\n\n<style>\n        #resizeButton {\n                border-radius: 50%;\n                position: absolute;\n                top: calc(100% - 12px);\n                left: calc(100% - 12px);\n                width: 24px;\n                height: 24px;\n                padding: 2px 5px;\n                border: 1px solid black;\n        }\n        #moveButton {\n                width: 100%;\n                height: 100%;\n        }\n        #deleteButton {\n                position: absolute;\n                left: calc(100% + 5px);\n                top: calc(50% - 15px);\n                height: 30px;\n                width: 60px;\n                color: red;\n        }\n\n</style>\n\n\n","<script>\n  import {upload_media, getProtectedImage} from './api.js';\n  import { onMount } from 'svelte'\n  import Rectangle from './rectangle.svelte'\n  export let data;\n  let occlusionImage;\n  let resize_tracking = false;\n  export let image_id;\n  let image_url = null;\n  let real_file_input;\n\n  let resizer;\n  let click_pos;\n  let old_dimensions;\n  function resize(e) {\n        click_pos = {x:e.clientX, y:e.clientY}\n        old_dimensions = {width:data.box.width, height:data.box.height}\n        document.onmousemove = (e) => {\n                        data.box.width  = old_dimensions.width  + (e.clientX - click_pos.x);\n                        data.box.height = old_dimensions.height + (e.clientY - click_pos.y);\n        }\n        document.onmouseup = (e) => {document.onmousemove = null;}\n  }\n\n  function upload() {\n          let file = real_file_input.files[0]\n          const reader = (new FileReader());\n          reader.readAsDataURL(file); \n          reader.onload = async () => {\n                  let media_id = await upload_media(reader.result);\n                  image_id = await media_id;\n                  image_url = 'url(' + reader.result + ')';  // base64 encoding of selected file with mime-type prefix\n                  occlusionImage.style['background-image'] = image_url\n          };\n  };\n\n  onMount(async () => {\n          if (image_id!=0) {\n                  image_url = await getProtectedImage( image_id );\n                  occlusionImage.style['background-image'] = 'url('+image_url+')';\n          }\n  });\n  const default_rectangle = {id: 0,  top: 50, left: 50, height: 100, width: 200, deleted:false}\n  function new_rectangle() {\n          //push a rectangle to the shapes list\n          //link it to a real card\n          var new_rect = {...default_rectangle}\n          data.rectangles.push(new_rect)\n          data.rectangles = data.rectangles;\n  }\n</script>\n\n\n<input type='file' bind:this={real_file_input} on:change={upload} accept='image/*' style='display: none'>\n\n<center><button type='button' on:click={new_rectangle} > + new rectangle</button>\n        <label style:display='inline'><input type=\"radio\" value={true}  name=\"hide\" bind:group={data.hide_all} /> Hide All </label>\n        <label style:display='inline'><input type=\"radio\" value={false} name=\"hide\" bind:group={data.hide_all} /> Hide One </label>\n</center>\n\n\n<button class='occlusionImage' on:click={real_file_input.click()} style:width={data.box.width+'px'} style:height={data.box.height+'px'} bind:this={occlusionImage}>\n        {#each data.rectangles as rectangle}\n                <Rectangle bind:self={rectangle} />\n        {/each}\n        <button bind:this={resizer} class='imageSizer' on:mousedown={resize} on:click={(e) => {e.stopPropagation()}}>⤡ Resize</button>\n        {#if !image_id}Click to Upload an Image{/if}\n</button>\n\n\n\n<style>\n        .occlusionImage {\n                border: 1px solid black;\n                position: relative;\n                padding: 0px;\n                background-size: cover;\n                background-repeat: no-repeat;\n                background-position: center center;\n                overflow: clip;\n        }\n        .imageSizer {\n                left: calc(100% - 1em);\n                top: calc(100% - 1em);\n                display: block;\n                position: absolute;\n                padding: 10px;\n\n        }\n\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import { get_placeholder } from './placeholder_cards.js';\n  import { local_unix_day, unix_seconds } from './unix_day.js';\n  import { getOcclusionData, random_id, upload_media, commit_changes } from './api.js';\n  import SideEditor from './side_editor.svelte';\n  import TagsEditor from './tags_editor.svelte';\n  import EditHeader from './edit_header.svelte';\n  import ImageOccluder from './image_occluder.svelte';\n  export let collection_tags;\n  export let card;\n  export let card_edited_alert;\n  export let state;\n  export let cached_cards;\n  let occlusion_data = {box:{width:500,height:500}, hide_all:true, rectangles:[]}\n  onMount(async () => {\n          if (card.id!=0 && card.card_type==='occlusion') {\n                  occlusion_data = await getOcclusionData(card.back_image_id)\n          }\n  });\n  let tmp_card = {...card}; // copy into tmp card\n  $: placeholder = get_placeholder(tmp_card.card_type)\n  const start_time = unix_seconds();\n  function preview() {\n          state.preview_mode = true;\n          state.card_to_preview = tmp_card;\n  }\n  function cancel() {\n          // if it was a new card (designated by id=0) we want to permanently delete it\n          if (card.id===0) {\n                  card.visibility = 'purged'\n          }\n          state['edit_mode'] = false;\n\n  }\n  async function save() {\n          const end_time = unix_seconds()\n          var elapsed = end_time - start_time;\n          // increment review_start time by the seconds we spend editing the card\n          // this will make the reviewing_time be less so that we don't\n          // double count the time as both editing and reviewing\n          state.review_start = state.review_start + elapsed;\n          // copy over values from the tmp card\n          for (var key in tmp_card) {\n                  card[key] = tmp_card[key];\n          };\n\n          if (card.card_type==='occlusion') {\n                  // If it took 30 seconds to make 6 Img Occlusion cards I want\n                  // to report this as 5 seconds per card so that I do not overcount\n                  elapsed = elapsed / occlusion_data.rectangles.length\n                  //const siblings = // fetch_cardlist back_image_id===card.back_image_id (old)\n                  // replace siblings with already cached_cards\n                  // cached_cards.push (siblings where not already in cached_cards)\n                  // occl_cards = siblings.\n\n                  for (let rect of occlusion_data.rectangles) {\n                          if (rect.deleted && rect.id!=0) {\n                                  // delete existing occlusion cards\n                                  // update the database via api\n                                  commit_changes({id: rect.id, visibility: 'purged'})\n                                  // update cached_cards locally\n                                  const cached_card = cached_cards.find((elem) => elem.id===rect.id)\n                                  cached_card.visibility = 'purged';\n                          }\n                          if (rect.id===0 && !rect.deleted) {\n                                  // create new occlusion cards\n                                  let new_card = {...card} // copy existing occlusion card\n                                  new_card.id = random_id()\n                                  rect.id = new_card.id // NB: We are building up occlusion data\n                                  cached_cards.push(new_card);\n                                  // send it to the db\n                                  commit_changes(new_card, elapsed)\n                          }\n                          // update occlusion data for all occl cards via api\n                          // update occlusion data locally in cached cards\n                  }\n                  // We just assigned each rectangle to a real card we just created\n                  // Now we save the image_occlusion_data in JSON to database media table\n                  const media_id = await upload_media(JSON.stringify(occlusion_data), false)\n                  // now go back and set back_image_id to media_id for all cards\n                  for (let rect of occlusion_data.rectangles) {\n                          // update the database\n                          commit_changes({id: rect.id, back_image_id: media_id})\n                          // locally update cached cards\n                          const cached_card = cached_cards.find((elem) => elem.id===rect.id)\n                          cached_card.back_image_id = media_id\n                  }\n                  // finally if our original card was one of these we should push it\n                  quit()\n                          \n          } else if (card.card_type==='basic' || card.card_type==='verses') {\n                  // API call to save edits to the server\n                  if (card.id===0) {\n                      card.id = random_id() \n                      cached_cards.push(card);\n                      cached_cards = cached_cards;\n                  }\n                  commit_changes(card, elapsed);\n                  quit()\n          }\n\n  }\n  function quit() {\n          state.edit_mode = false;\n          state.card_to_edit = null;\n          card_edited_alert = true;\n  }\n\n  \n</script>\n\n\n\n<body>\n\n<EditHeader bind:card={tmp_card} on:preview={preview} on:cancel={cancel} on:save={save}></EditHeader>\n<hr>\n\n{#if tmp_card.card_type==='occlusion'}\n        <ImageOccluder bind:data={occlusion_data} bind:image_id={tmp_card.front_image_id} />\n        <hr>\n{/if}\n\n<SideEditor image_picker_disabled={tmp_card.card_type==='occlusion'} bind:text={tmp_card.front_text} bind:image_id={tmp_card.front_image_id} placeholder={placeholder.front}></SideEditor>\n<hr>\n\n\n{#if tmp_card.card_type!='verses'}\n<SideEditor image_picker_disabled={tmp_card.card_type==='occlusion'} bind:text={tmp_card.back_text} bind:image_id={tmp_card.back_image_id} placeholder={placeholder.back}></SideEditor>\n<hr>\n{/if}\n\n<TagsEditor bind:collection_tags bind:card={tmp_card}></TagsEditor>\n\n</body>\n","\nfunction get_basic_placeholder() {\n        return {front: 'Question', back: 'Answer'}\n};\n\nfunction get_verses_placeholder() {\n        return {front: \"To be or not to be, that is the question:  \\n\" +\n                       \"Whether 'tis nobler in the mind to suffer  \\n\" +\n                       \"The slings and arrows of outrageous fortune\\n\" +\n                       \"Or to take arms against a sea of troubles  \\n\" +\n                       \"And by opposing, end them.\",\n                back: ''\n        }\n};\n\nfunction get_occlusion_placeholder() {\n        return {front: \"- Text entered when the cards are created will be shared between all cards. \\n\" +\n                       \"- Afterwards each card's front and back text can be edited individually.\",\n                back:  ''}\n}\n\nfunction get_placeholder(card_type) {\n        return card_type==='basic'  ? get_basic_placeholder()  :\n               card_type==='verses' ? get_verses_placeholder() : get_occlusion_placeholder()\n\n}\n\nexport { get_placeholder }\n","<script>\n        import { onMount } from 'svelte'\n        import { getProtectedImage, getOcclusionData } from './api.js'\n        export let card;\n        export let flipped;\n        let occlusion_data;\n        let occludedImage;\n        onMount( async () => {\n                occlusion_data = await getOcclusionData(card.back_image_id)\n                const image_url = await getProtectedImage(card.front_image_id)\n                occludedImage.style['background-image'] = 'url(' + image_url + ')'\n        });\n</script>\n\n{#if occlusion_data}\n<div id='occludedImage' bind:this={occludedImage} style:width={occlusion_data.box.width+'px'} style:height={occlusion_data.box.height+'px'}>\n  {#each occlusion_data.rectangles as rect}\n          {#if !rect.deleted}\n            <div style=\"position: absolute; top: {rect.top}px; left: {rect.left}px;\n                    width: {rect.width}px; height: {rect.height}px;\n                    background-color: {card.id===rect.id         ? 'transparent' :\n                                        !occlusion_data.hide_all ? 'rgba(70,70,70,0.2)' :\n                                                                   'rgba(70,70,70,1)'};\n                    border: 5px solid {!(card.id===rect.id) ? 'black' : flipped ? 'green' : 'red'}\">\n            </div>\n          {/if}\n  {/each}\n</div>\n{:else}\nLoading...\n{/if}\n\n<style>\n        #occludedImage {\n                background-position: center center;\n                background-repeat: no-repeat;\n                background-size: cover;\n                padding: 0px;\n                position: relative;\n        }\n</style>\n\n\n\n","<script>\n    import OcclusionReviewer from './occlusion_reviewer.svelte'\n    import { onMount } from 'svelte';\n    import { unix_seconds, local_unix_day } from './unix_day.js';\n    import { dummy_card } from './card_templates.js'\n    import { hypothetical_due_dates, commit_grade, commit_changes, getProtectedImage } from './api.js';\n    export let card;\n    export let preview = false;\n    export let state;\n    export let card_edited_alert;\n    let current_time = local_unix_day();\n    let review_stop;\n    let back_img;\n    let front_img;\n    let flipped = preview; //we are done clicking and should see the grading buttons\n    let verses_line_no = 1;\n    let verses_lines = card.front_text.split('\\n')\n    $: display_back_text = (card.card_type!='verses' && flipped) ? 'block' : 'none';\n    $: flipper_button_display = flipped ? 'none' : 'block';\n    $: grade_buttons_display = flipped && !preview ? 'grid' : 'none';\n    $: manage_buttons_display = flipped ? 'grid' : 'none';\n    let hypo_due_dates = {again: 0, hard: 10, good: 15, easy: 25};\n    onMount(async () => {\n            hypo_due_dates = await hypothetical_due_dates(card.id, current_time);\n            state.review_start = unix_seconds();\n            if (card.front_image_id!=0) {\n                    const image_url = await getProtectedImage(card.front_image_id);\n                    front_img.src = image_url;\n            }\n            if (card.back_image_id!=0 && card.card_type!='occlusion') {\n                    back_img.src = await getProtectedImage(card.back_image_id);\n            }\n\n    });\n    function delete_card() {\n            card.visibility = 'deleted';\n            commit_changes(card);\n            card_edited_alert = true;\n            quit();\n    }\n    function quit() {\n            if (state.preview_mode) {\n                    state.preview_mode = false;\n                    state.card_to_preview = null;\n            } else {\n                    state.reviewing = false;\n                    state.card_to_review = null;\n            }\n    }\n    function edit() {\n            state.edit_mode = true;\n            state.card_to_edit = card;\n            if (state.preview_mode) {\n                    quit()\n            }\n\n    }\n    async function grade(grade) {\n            // postpone the card while we figure out what the\n            // real due date is. This lets the reviewer continue\n            // to the next card while we figure it out.\n            card.due_date = (current_time + 1);\n            \n            review_stop = unix_seconds();\n            var elapsed = review_stop - state.review_start;\n\n            await commit_grade(card.id, grade, elapsed);\n            card.due_date = hypo_due_dates[grade];\n            await commit_changes(card);\n\n\n            // TODO set the due_date equal to the hypothetical and push to the server\n            state.card_to_review = null;\n            flipped = false;\n    }\n    function flip() {\n            if (card.card_type==='basic' || card.card_type==='occlusion') {\n                    flipped = true;\n            } else if (card.card_type==='verses') {\n                    verses_line_no++\n                    flipped = (verses_line_no===verses_lines.length)\n            }\n    }\n    function default_action() {\n            if (!flipped) {\n                    flip()\n            } else {\n                    //grade('good');\n            }\n    }\n    function handleKeydown(event) {\n        //let char = (typeof event !== 'undefined') ? String.fromCharCode(event.keyCode) : event.which\n        const char = event.key;\n        if (char==='e') {\n                edit()\n        } else if (char==='b' || char=='q') {\n                quit()\n        } else if (char==='d') {\n                delete_card()\n        } else if (char===' ') {\n                default_action()\n        } else if (char === '1') {\n                grade('again');\n        } else if (char === '2') {\n                grade('hard');\n        } else if (char === '3') {\n                grade('good');\n        } else if (char === '4') {\n                grade('easy');\n        }\n    }\n\n\n</script>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n<body on:click={default_action}>\n\n<div id='buttons_bar'>\n<div style='display: {manage_buttons_display}' id='manage_buttons_bar'>\n<button class='manage_button' on:click={edit}>✍ <u>e</u>dit</button>\n<button class='manage_button' on:click={quit}>⏎ {@html preview ? '<u>b</u>ack' : '<u>q</u>uit'}</button>\n<button class='manage_button' on:click={delete_card}>✕ <u>d</u>elete</button>\n</div>\n\n<div style='display: {grade_buttons_display}' id='grade_buttons_bar'>\n        {#if hypo_due_dates}\n\t{#each [['again',1], ['hard',2], ['good',3], ['easy',4]] as [grade_val, num]}\n                <button class='grade_button' on:click|stopPropagation={() => grade(grade_val)}>\n\t\t\t{grade_val} ({num})<br>\n                        <span style='font-size: 12px'>+{Math.floor(hypo_due_dates[grade_val]) - Math.floor(current_time)} days</span>\n  \t</button>\n\t{/each}\n        {/if}\n</div>\n</div>\n\n{#if card.card_type==='basic' || preview}\n  {@html card.front_text.replace(/\\n/g,'<br>')}\n{:else if card.card_type==='verses'}\n  {#each verses_lines.slice(0,verses_line_no) as line}\n          {line}<br>\n  {/each}\n{/if}\n\n<br><br>\n<button id='flipper' type='button' on:click={flip} style='display: {flipper_button_display}' autofocus>\n        {card.card_type==='verses' ? 'Next Line' : 'Flip'}<br>\n\t<span style='font-size: 14px'>(click anywhere)</span>\n</button>\n\n<div id='backside' style='display: {display_back_text}'>\n\t<br>\n{@html card.back_text.replace('\\n','<br>')}\n</div>\n\n{card.tags}\n<hr>\n\n{#if card.back_image_id!=0 && flipped && !card.card_type==='occlusion'}\n        <center><img bind:this={back_img} /></center>\n{/if}\n{#if card.front_image_id!=0 && (card.back_image_id===0 || preview || !flipped) && !card.card_type==='occlusion'}\n        <center><img bind:this={front_img} /></center>\n{/if}\n\n\n{#if card.card_type==='occlusion' && card.front_image_id}\n        <OcclusionReviewer bind:card bind:flipped />\n{/if}\n\n\n</body>\n\n<style>\n\t#flipper {\n\t\tpadding: 6px 12px;\n\t\tfont-size: 1.3em;\n\t}\n\timg {\n\t\tdisplay: inline;\n                max-width: 500px;\n\t}\n\t#grade_buttons_bar {\n\t\tgrid-template-columns: auto auto auto auto;\n                gap: 10px;\n\t}\n\t#buttons_bar {\n                width: 80%;\n\t\tposition: fixed;\n\t\tbottom: 10px;\n                margin: auto 12% auto 8%;\n\t}\n\t#manage_buttons_bar {\n\t\tgrid-template-columns: auto auto auto;\n                gap: 10px;\n\t}\n\t.grade_button {\n\t}\n\t.manage_button {\n\t}\n        body {\n                min-height: 100%;\n        }\n</style>\n\n","<script>\n        import { onMount } from 'svelte'\n        import { get_users_list, get_token, register_and_get_token } from './api.js';\n        export let username;\n\tlet users = [];\n        let typed_username = '';\n\tlet password = '';\n\tlet register_or_login = 'login';\n        let failed_login = false;\n        let password_box; let username_box;\n\t$: user_exists = users.includes(typed_username);\n\t$: login_possible = user_exists && password.length > 2;\n\t$: register_possible = !user_exists && typed_username.length > 2 && password.length > 2;\n\t$: submit_possible = register_or_login==='login'&&login_possible ||\n\t\t                   register_or_login==='register'&&register_possible;\n\t$: warning = \"user does not exist!\".repeat(register_or_login==='login' && !user_exists && typed_username.length > 2) + \n\t\t\t\t\t\t \t\"username is already taken!\".repeat(register_or_login==='register' && user_exists && typed_username.length > 2);\n        onMount(async () => {\n                users = await get_users_list();\n                username_box.focus();\n        });\n        async function login() {\n                const success = await get_token(typed_username, password);\n                if (success) {\n                  username = typed_username;\n                } else {\n                  //failed_login = 'incorrect password';\n                  password = '';\n                  password_box.focus()\n                }\n        }\n        async function register() {\n                const success = await register_and_get_token(typed_username, password)\n                if (success) {\n                        username = typed_username\n                } else {\n                        alert('registration failed')\n                }\n        }\n        function submit() {\n                if (register_or_login==='login') {\n                        login()\n                } else {\n                        register()\n                }\n        }\n</script>\n\n<body>\n{warning}\n<input class='entry' bind:this={username_box} type='text' placeholder='Username' bind:value={typed_username}>\n<input class='entry' bind:this={password_box} type='password' placeholder='Password' bind:value={password}>\n{#if register_or_login==='login' && failed_login}<center style=\"color: darkred\">Incorrect Password</center> {/if}\n\n<div id='bottom_row'>\n\t<label><input type='radio' name='rol' value='login' bind:group={register_or_login}> LOGIN</label>\n\t<label><input type='radio' name='rol' value='register' bind:group={register_or_login}> REGISTER</label>\n        <input type='submit' value={register_or_login} disabled={!submit_possible} style:border={submit_possible ? '1px solid black' : ''} on:click={submit}>\n</div>\n<br><center><button type='button' on:click={() => {username = 'guest'}}>continue as guest</button></center>\n</body>\n\n<style>\n\t.entry {\n\t\tdisplay: block;\n\t\twidth: 100%\n\t}\n\tlabel {\n\t\tmargin: auto 0;\n\t\tfont-size: 14px;\n\t}\n\t#bottom_row {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 30% 40% 30%;\n\t}\n\tbody {\n\t\tbackground-color: #DECEDE;\n\t\tborder: 1px solid black;\n\t\tmax-width: 300px;\n\t\tmax-height: 300px;\n\t\tmargin: auto auto;\n                position: absolute;\n                top: calc(50% - 150px);\n                left: calc(50% - 150px);\n\t\t\n\t}\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import { dummy_card } from './card_templates.js';\n  import { unix_seconds, local_unix_day } from './unix_day.js';\n  import { get_collection_tags, set_guest_user, fetch_cardlist } from './api.js';\n  import { filter_card, get_next_due_card }  from './filtering.js'\n  import Home from './home.svelte';\n  import Edit from './edit.svelte';\n  import Review from './review.svelte';\n  import Login from './login.svelte';\n  let cached_cards = new Array(1).fill(dummy_card);\n  let filtered_cards = cached_cards;\n  let card_edited_alert = false;\n  let defer_load = true;\n  let collection_tags = [];\n  let username;\n  let state = {card_to_edit: null, edit_mode: false,\n               card_to_preview: null, preview_mode: false,\n               card_to_review: null, reviewing: false, review_start: null};\n  let filters = { deleted: false, search: '',\n                 due: null, new: null,\n                 images: null, audio: null,\n                 tag: null, card_type: '',\n                 created_after: null, created_before: null,\n                 due_after: null, due_before:  null,}\n  let sort = 'recent';\n  let info = null;\n  let current_time = local_unix_day();\n  let cards_loaded = false;\n\n  $: created_cards = cached_cards.filter((card) => card.create_date > Math.floor(current_time))\n  $: due_cards = cached_cards.filter((card) => card.due_date < current_time)\n  $: created_count = created_cards.length\n  $: due_count = due_cards.length\n\n  let next_card;\n  $: if (state.reviewing && state.card_to_review===null) {\n          state.review_start = unix_seconds();\n          next_card = get_next_due_card(filtered_cards);\n          if (next_card===null) { state.reviewing = false; }\n          state.card_to_review=next_card; // can be null\n  };\n\n\n  async function refresh_cached_cards() {\n          // TODO we should pull cards from the db\n          // which match our criteria up to 300\n          if (!defer_load) {\n\n                  cached_cards = await fetch_cardlist(filters, sort);\n                  collection_tags = await get_collection_tags();\n          }\n  }\n  async function refresh_filtered_cards() {\n          if (!defer_load) {\n                  filtered_cards = cached_cards//.filter((card) => filter_card(filters, card));\n                  //const f = filtered_cards.sort((c1,c2) => {return c1.edit_seconds - c2.edit_seconds});\n                  card_edited_alert = false;\n                  switch (sort) {\n                        case 'recent':\n                                  filtered_cards.sort((c1,c2) => Math.max(c2.last_edit_date, c2.last_review_date)-\n                                                                 Math.max(c1.last_edit_date, c1.last_review_date))\n                                  break;\n                        case 'old':\n                                  filtered_cards.sort((c1,c2) => c1.create_date - c2.create_date)\n                                  break;\n                        case 'meritorious':\n                                  filtered_cards.sort((c1,c2) => c2.merit - c1.merit)\n                                  break;\n                        case 'edited':\n                                  filtered_cards.sort((c1,c2) => c1.last_edit_date - c2.last_edit_date)\n                                  break;\n                        case 'reviewed':\n                                  filtered_cards.sort((c1,c2) => c1.last_review_date - c2.last_review_date)\n                                  break;\n                        case 'random':\n                                  filtered_cards.sort(() => Math.random() - 0.5)\n                                  break;\n                        case 'overdue':\n                                  filtered_cards.sort((c1,c2) => c1.due_date - c2.due_date)\n                                  break;\n                        case 'total time':\n                                  filtered_cards.sort((c1,c2) => c2.total_seconds - c1.total_seconds)\n                                  break;\n                  }\n          }\n  }\n\n  $: {let x = {...filters}; sort; refresh_cached_cards()} // TODO should refresh cached cards\n  $: username,                    refresh_cached_cards()\n  $: cached_cards,      refresh_filtered_cards()\n  $: card_edited_alert, refresh_filtered_cards()\n  \n\n  onMount(async () => {\n      set_guest_user();\n      username = window.localStorage.getItem('username');\n      defer_load = false;\n  });\n\n</script>\n\n<body>\n{#if username === 'none'}\n  <Login bind:username></Login>\n{:else}\n\n{#if state.preview_mode && state.card_to_preview}\n  <Review preview=true bind:card={state.card_to_preview} bind:state></Review>\n{/if}\n\n<div style:display={(!state.preview_mode) ? 'block' : 'none'}>\n  {#if state.edit_mode && state.card_to_edit}\n    <Edit bind:card={state.card_to_edit} bind:cached_cards bind:card_edited_alert bind:collection_tags bind:state />\n  {/if}\n</div>\n\n<div style:display={(!state.preview_mode && !state.edit_mode) ? 'block' : 'none'}>\n  {#if state.reviewing && state.card_to_review!=null}\n    <Review bind:card_edited_alert bind:state bind:card={state.card_to_review} />\n  {/if}\n</div>\n\n<div style:display={(!state.preview_mode && !state.edit_mode && !state.reviewing) ? 'block' : 'none'}>\n  <Home bind:sort bind:collection_tags bind:card_edited_alert bind:due_count bind:created_count bind:username bind:filters bind:state bind:filtered_cards bind:cached_cards bind:info/>\n</div>\n\n{/if}\n</body>\n\n\n<style>\n  body {\n    background-color: #CAE3CD;\n    border: 1px solid black;\n    margin: 0 auto;\n    min-height: 100%;\n    height: fit-content;\n  }\n</style>\n","import { local_unix_day } from './unix_day.js'\n\nfunction filter_card(filters, card) {\nreturn ((card.visibility != 'purged') &&\n        //(!filters['search']        || card.front_text.includes(filters['search']) || card.back_text.includes(filters['search'])) &&\n        (filters['deleted']===null || filters['deleted']===(card.visibility==='deleted')) &&\n        // TODO local_unix_day is reevaluated for each card --performance\n        (filters['due']===null     || filters['due']    ===(card.due_date < local_unix_day())) &&\n        (filters['new']===null     || filters['new']    ===(card.due_date===card.create_date)) &&\n        (filters['images']===null  || filters['images'] ===(card.front_image_id!=0 || card.back_image_id!=0)) &&\n        (filters['audio']===null   || filters['audio']  ===(card.front_audio_id!=0 || card.back_audio_id!=0)) &&\n        (!filters['card_type']     || filters['card_type'] === card.card_type) &&\n        (!filters['created_after'] || (new Date(filters['created_after']))/24/60/60/1000 < card.create_date) &&\n        (!filters['created_before']|| (new Date(filters['created_before']))/24/60/60/1000 > card.create_date) &&\n        (!filters['due_after']     || (new Date(filters['due_after']))/24/60/60/1000 < card.due_date) &&\n        (!filters['due_before']    || (new Date(filters['due_before']))/24/60/60/1000 > card.due_date) &&\n        (!filters['tag']           || card.tags.includes(filters['tag'])) &&\n         true )\n}\n\n// if we are reviewing find out the next card to study\nfunction get_next_due_card(filtered_cards) {\n        //TODO use the top card in the list\n        if (filtered_cards.length===0) { return null };\n//sort to get soonest due\n  filtered_cards.sort((card1,card2) => {return card1.due_date - card2.due_date})\n  var soonest_card = filtered_cards[0];\n  // return the soonest card if it is due,\n  // otherwise return null because no cards are due\n if (soonest_card.due_date < local_unix_day()) {\n         return soonest_card\n } else {\n         alert('Congratulations Student. There are no more due cards.')\n         return null\n }\n}\n\nexport { filter_card, get_next_due_card }\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","createElementNS","t","innerHTML","Array","from","childNodes","p","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","createEvent","initCustomEvent","custom_event","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","outro_and_destroy_block","lookup","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","unix_seconds","Math","floor","Date","now","tz_offset","getTimezoneOffset","local_unix_day","new_card","current_time","id","front_text","back_text","visibility","card_type","scheduler","tags","merit","create_date","due_date","last_review_date","last_edit_date","review_seconds","edit_seconds","total_seconds","front_image_id","back_image_id","front_audio_id","back_audio_id","dummy_card","api_url","random_id","String","random","default_options","method","mode","headers","Authorization","localStorage","getItem","async","commit_changes","card","seconds","url","URL","metadata","date","payload","body","JSON","stringify","fetch","handle_error_response","response","server_card","json","catch","fetch_error_handler","error","alert","message","ok","status","statusText","upload_media","content","base64","media_id","fetchWithAuthentication","Headers","getProtectedImage","blob","createObjectURL","getOcclusionData","parse","slot_ctx","indeterminate","input_indeterminate_value","checked","input_checked_value","label","br","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","max","current","state","states","state_idx","$$invalidate","color","null","true","false","button","div0","div1","dispatch","due_count","due_count_plus","created_count","t9_value","div","button0","button1","button2","span0","span1","t9","card_edited_alert","info","text_decoration","is_due","due_alert","extra_info","trunc","get_extra_info","tooltip","tooltiptext","innerWidth","rect","getBoundingClientRect","left_margin","left","right_margin","right","$$value","t_value","tristate0_props","tristate1_props","tristate2_props","if_block","deleted","create_if_block","tristate3_props","tristate4_props","select0","select1","select2","select3","div3","option0","option1","option2","option3","option4","option5","option6","option7","option8","option9","option10","option11","option12","option13","div2","span2","option14","option15","option16","option17","option18","option19","span3","option20","tristate0_changes","tristate1_changes","tristate2_changes","tristate3_changes","tristate4_changes","purge_button","filters","collection_tags","sort","filtered_cards","confirm","purge","display","$$self","center","open","pointer","more_or_less","a0","a1","each_value_1","func","get_key","old_blocks","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","set","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","each_blocks","username","cached_cards","search","cols","nc","reviewing","elem","idx","arr","offset","textarea","area","placeholder","real_file_input","click","button_1","t5","t5_value","image_id","image_url","disabled","file","files","reader","FileReader","readAsDataURL","onload","result","audio_id","audio_file","image_file","image_picker_disabled","t1","t1_value","includes","t0_value","each_value","reverse","t0","new_tag","tag","has_tag_map","reduce","running_map","tl","split","tags_list","entries","pair","join","prompt","width","height","top","swallow","stopPropagation","click_pos","old_self","self","x","clientX","y","clientY","onmousemove","onmouseup","rectangles","box","input0","label0","input1","hide_all","label1","input2","apply","arguments","occlusionImage","resizer","old_dimensions","default_rectangle","new_rect","imageoccluder_props","hr","imageoccluder_changes","back","sideeditor_props","sideeditor_changes","create_if_block_1","front","hr0","hr1","occlusion_data","tmp_card","start_time","quit","edit_mode","card_to_edit","preview_mode","card_to_preview","elapsed","review_start","find","occludedImage","flipped","span","t6","t6_value","raw_value","replace","html_tag","img","raw1_value","t19_value","create_if_block_5","create_if_block_3","create_if_block_4","create_if_block_2","if_block3","if_block4","br0","br1","button3","br2","br3","raw0_value","t13","t13_value","html_tag_1","t19","review_stop","back_img","front_img","preview","verses_line_no","verses_lines","hypo_due_dates","again","hard","good","easy","delete_card","card_to_review","edit","grade","card_id","review","commit_grade","flip","default_action","URLSearchParams","hypothetical_due_dates","display_back_text","flipper_button_display","grade_buttons_display","manage_buttons_display","char","grade_val","failed_login","input3","input4","password_box","username_box","users","typed_username","password","register_or_login","login","success","fd","FormData","token","setItem","access_token","get_token","focus","register","register_and_get_token","get_users_list","user_exists","login_possible","register_possible","submit_possible","warning","repeat","if_block0","if_block1","if_block2","review_props","review_changes","edit_props","edit_changes","next_card","defer_load","due","new","images","audio","created_after","created_before","due_after","due_before","refresh_cached_cards","crit","fetch_cardlist","get_collection_tags","refresh_filtered_cards","c1","c2","set_guest_user","created_cards","due_cards","card1","card2","soonest_card","get_next_due_card"],"mappings":"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"}